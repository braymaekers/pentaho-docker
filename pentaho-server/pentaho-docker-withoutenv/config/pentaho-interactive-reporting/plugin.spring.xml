<?xml version="1.0" encoding="UTF-8"?>
<!--===========================================================================
HITACHI VANTARA PROPRIETARY AND CONFIDENTIAL

Copyright 2002 - 2017 Hitachi Vantara. All rights reserved.

NOTICE: All information including source code contained herein is, and
remains the sole property of Hitachi Vantara and its licensors. The intellectual
and technical concepts contained herein are proprietary and confidential
to, and are trade secrets of Hitachi Vantara and may be covered by U.S. and foreign
patents, or patents in process, and are protected by trade secret and
copyright laws. The receipt or possession of this source code and/or related
information does not convey or imply any rights to reproduce, disclose or
distribute its contents, or to manufacture, use, or sell anything that it
may describe, in whole or in part. Any reproduction, modification, distribution,
or public display of this information without the express written authorization
from Hitachi Vantara is strictly prohibited and in violation of applicable laws and
international treaties. Access to the source code contained herein is strictly
prohibited to anyone except those individuals and entities who have executed
confidentiality and non-disclosure agreements or other agreements with Hitachi Vantara,
explicitly covering such access.
============================================================================-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ws="http://jax-ws.dev.java.net/spring/core" xmlns:wss="http://jax-ws.dev.java.net/spring/servlet"
  xmlns:pen="http://www.pentaho.com/schema/pentaho-system"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
                           http://jax-ws.dev.java.net/spring/core http://jax-ws.dev.java.net/spring/core.xsd
                           http://jax-ws.dev.java.net/spring/servlet http://jax-ws.dev.java.net/spring/servlet.xsd
                           http://www.pentaho.com/schema/pentaho-system http://www.pentaho.com/schema/pentaho-system.xsd">

  <context:annotation-config />
  <!-- Register with PentahoSystem -->
  <bean class="org.pentaho.platform.engine.core.system.objfac.spring.ApplicationContextPentahoSystemRegisterer" scope="singleton"/>
  <bean id="prpti.new" class="org.pentaho.platform.plugin.services.webservices.content.PluginFileContentGenerator" scope="prototype">
    <property name="mimeType" value="text/html" />
    <property name="relativeFilePath" value="resources/web/pir.html" />
    <property name="pluginId" value="pentaho-interactive-reporting" />
  </bean>  
  
  <bean id="prpti.view" class="org.pentaho.platform.plugin.services.webservices.content.PluginFileContentGenerator" scope="prototype">
    <property name="mimeType" value="text/html" />
    <property name="relativeFilePath" value="resources/web/pir.html" />
    <property name="pluginId" value="pentaho-interactive-reporting" />
  </bean>  

  <bean id="prpti.mobile" class="org.pentaho.platform.plugin.services.webservices.content.PluginFileContentGenerator" scope="prototype">
    <property name="mimeType" value="text/html" />
    <property name="relativeFilePath" value="reportviewer/report.html" />
    <property name="pluginId" value="reporting" />
  </bean>  
  
  <bean id="prpti.report" class="org.pentaho.reporting.platform.plugin.ReportContentGenerator" scope="prototype"/>

  <bean id="prpti.reportjob" class="org.pentaho.reporting.platform.plugin.BackgroundJobReportContentGenerator" scope="prototype" />
  
  <bean id="prpti.parameterUi" class="org.pentaho.platform.plugin.services.webservices.content.PluginFileContentGenerator" scope="prototype">
    <property name="mimeType" value="text/html" />
    <property name="relativeFilePath" value="reportviewer/report.html" />
    <property name="pluginId" value="reporting" />
  </bean>
  
   <bean id="prpti.edit" class="org.pentaho.platform.plugin.services.webservices.content.PluginFileContentGenerator" scope="prototype">
    <property name="mimeType" value="text/html" />
    <property name="relativeFilePath" value="resources/web/pir.html" />
    <property name="pluginId" value="pentaho-interactive-reporting" />
  </bean> 
	
  <bean id="prpti.schedule" class="org.pentaho.platform.plugin.services.webservices.content.PluginFileContentGenerator" scope="prototype">
    <property name="mimeType" value="text/html" />
    <property name="relativeFilePath" value="reportviewer/report.html" />
    <property name="pluginId" value="pentaho-interactive-reporting" />
  </bean>  
	
  <bean id="prpti.devtools" class="org.pentaho.platform.plugin.services.webservices.content.PluginFileContentGenerator" scope="prototype">
    <property name="mimeType" value="text/html" />
    <property name="relativeFilePath" value="resources/web/unittests/testindex.html" />
    <property name="pluginId" value="pentaho-interactive-reporting" />
  </bean>	

  <bean id="prpti.backgroundExecution" class="org.pentaho.reporting.platform.plugin.SimpleReportingAction" scope="prototype"/>

  <bean id="parameter" class="org.pentaho.reporting.platform.plugin.ParameterContentGenerator" scope="prototype"/>

  <!-- Thread pool executor -->
  <!-- The thread-pool capacity heavily depends on the expected number of users on the system
   and how many resources should be allocated to the report execution.
   Minimum value: 2
   Default value: depends on your case but probably should be equal to your CPU core quantity.
   Maximum value:  Integer.MAX_VALUE
  -->
  <bean id="IAdhocExecutor" class="com.pentaho.iadhoc.service.executors.async.PentahoAdHocExecutor" scope="singleton" lazy-init="false">
    <constructor-arg type="int" value="10" />
  </bean>

  <bean id="api" class="org.pentaho.platform.web.servlet.JAXRSPluginServlet"/>


  <bean class="org.pentaho.platform.engine.core.solution.ContentInfo">
	<property name="mimeType" value="application/zip"/>	
	<property name="extension" value=".prpti"/>	
	<property name="canImport" value="true"/>
	<property name="canExport" value="true"/>		
	<pen:publish as-type="INTERFACES"/>
  </bean>

  <!-- Job manager has some properties you can configure:
     0) You should provide all constructor arguments even if you disable async execution.
     1) Asynchronous execution enabled/disabled - you can disable async execution by passing "false" to the argument
     2) Status polling interval (ms) - how often browser asks server for running report status
     3) Dialog showing threshold (ms) - minimum execution time to show progress dialog
      If report was generated faster -  dialog would not be shown. Proposed minimum ratio is 3:1 to polling interval.
     -->
  <bean class="com.pentaho.iadhoc.service.AdHocJobManager" scope="singleton">
    <!-- async execution enabled/disabled -->
    <constructor-arg type="boolean" value="true" />
    <!-- status polling interval -->
    <constructor-arg type="long" value="500" />
    <!-- dialog threshold -->
    <constructor-arg type="long" value="1500" />
  </bean>
</beans>
